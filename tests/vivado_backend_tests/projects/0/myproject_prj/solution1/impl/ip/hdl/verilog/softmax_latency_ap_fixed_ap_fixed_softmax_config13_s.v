// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module softmax_latency_ap_fixed_ap_fixed_softmax_config13_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        data_4_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] data_0_V_read;
input  [15:0] data_1_V_read;
input  [15:0] data_2_V_read;
input  [15:0] data_3_V_read;
input  [15:0] data_4_V_read;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] exp_table1_address0;
reg    exp_table1_ce0;
wire   [16:0] exp_table1_q0;
wire   [9:0] exp_table1_address1;
reg    exp_table1_ce1;
wire   [16:0] exp_table1_q1;
wire   [9:0] exp_table1_address2;
reg    exp_table1_ce2;
wire   [16:0] exp_table1_q2;
wire   [9:0] exp_table1_address3;
reg    exp_table1_ce3;
wire   [16:0] exp_table1_q3;
wire   [9:0] exp_table1_address4;
reg    exp_table1_ce4;
wire   [16:0] exp_table1_q4;
wire   [9:0] invert_table2_address0;
reg    invert_table2_ce0;
wire   [17:0] invert_table2_q0;
reg   [9:0] y_V_4_reg_514;
reg   [16:0] exp_res_0_V_reg_519;
reg   [16:0] exp_res_0_V_reg_519_pp0_iter2_reg;
reg   [16:0] exp_res_0_V_reg_519_pp0_iter3_reg;
reg   [16:0] exp_res_0_V_reg_519_pp0_iter4_reg;
reg   [16:0] exp_res_1_V_reg_526;
reg   [16:0] exp_res_1_V_reg_526_pp0_iter2_reg;
reg   [16:0] exp_res_1_V_reg_526_pp0_iter3_reg;
reg   [16:0] exp_res_1_V_reg_526_pp0_iter4_reg;
reg   [16:0] exp_res_2_V_reg_533;
reg   [16:0] exp_res_2_V_reg_533_pp0_iter2_reg;
reg   [16:0] exp_res_2_V_reg_533_pp0_iter3_reg;
reg   [16:0] exp_res_2_V_reg_533_pp0_iter4_reg;
reg   [16:0] exp_res_3_V_reg_540;
reg   [16:0] exp_res_3_V_reg_540_pp0_iter2_reg;
reg   [16:0] exp_res_3_V_reg_540_pp0_iter3_reg;
reg   [16:0] exp_res_3_V_reg_540_pp0_iter4_reg;
reg   [16:0] exp_res_4_V_reg_552;
reg   [16:0] exp_res_4_V_reg_552_pp0_iter3_reg;
reg   [16:0] exp_res_4_V_reg_552_pp0_iter4_reg;
wire   [17:0] p_Val2_8_fu_306_p2;
reg   [17:0] p_Val2_8_reg_558;
reg   [17:0] inv_exp_sum_V_reg_569;
wire  signed [25:0] sext_ln1116_fu_366_p1;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln251_fu_170_p1;
wire   [63:0] zext_ln251_1_fu_185_p1;
wire   [63:0] zext_ln251_2_fu_200_p1;
wire   [63:0] zext_ln251_3_fu_215_p1;
wire   [63:0] zext_ln251_4_fu_230_p1;
wire   [63:0] zext_ln259_fu_361_p1;
wire   [9:0] y_V_fu_160_p4;
wire   [9:0] y_V_1_fu_175_p4;
wire   [9:0] y_V_2_fu_190_p4;
wire   [9:0] y_V_3_fu_205_p4;
wire   [17:0] zext_ln203_1_fu_237_p1;
wire   [17:0] zext_ln203_fu_234_p1;
wire   [17:0] p_Val2_2_fu_246_p2;
wire   [0:0] p_Result_s_fu_256_p3;
wire   [16:0] add_ln746_fu_252_p2;
wire   [16:0] p_Val2_6_fu_264_p3;
wire   [17:0] zext_ln203_3_fu_243_p1;
wire   [17:0] zext_ln203_2_fu_240_p1;
wire   [17:0] p_Val2_5_fu_276_p2;
wire   [0:0] p_Result_10_fu_286_p3;
wire   [16:0] add_ln746_1_fu_282_p2;
wire   [16:0] p_Val2_7_fu_294_p3;
wire   [17:0] zext_ln746_1_fu_302_p1;
wire   [17:0] zext_ln746_fu_272_p1;
wire   [0:0] p_Result_11_fu_315_p3;
wire   [17:0] p_Val2_9_fu_322_p3;
wire   [17:0] zext_ln203_4_fu_312_p1;
wire   [17:0] p_Val2_11_fu_329_p2;
wire   [0:0] p_Result_12_fu_335_p3;
wire   [9:0] tmp_fu_343_p4;
wire   [9:0] y_V_5_fu_353_p3;
wire  signed [25:0] grp_fu_459_p2;
wire  signed [25:0] grp_fu_466_p2;
wire  signed [25:0] grp_fu_473_p2;
wire  signed [25:0] grp_fu_480_p2;
wire  signed [25:0] grp_fu_487_p2;
wire   [16:0] grp_fu_459_p0;
wire  signed [17:0] grp_fu_459_p1;
wire   [16:0] grp_fu_466_p0;
wire  signed [17:0] grp_fu_466_p1;
wire   [16:0] grp_fu_473_p0;
wire  signed [17:0] grp_fu_473_p1;
wire   [16:0] grp_fu_480_p0;
wire  signed [17:0] grp_fu_480_p1;
wire   [16:0] grp_fu_487_p0;
wire  signed [17:0] grp_fu_487_p1;
reg    grp_fu_459_ce;
reg    grp_fu_466_ce;
reg    grp_fu_473_ce;
reg    grp_fu_480_ce;
reg    grp_fu_487_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to6;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [25:0] grp_fu_459_p00;
wire   [25:0] grp_fu_466_p00;
wire   [25:0] grp_fu_473_p00;
wire   [25:0] grp_fu_480_p00;
wire   [25:0] grp_fu_487_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
end

softmax_latency_ap_fixed_ap_fixed_softmax_config13_s_exp_bkb #(
    .DataWidth( 17 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table1_address0),
    .ce0(exp_table1_ce0),
    .q0(exp_table1_q0),
    .address1(exp_table1_address1),
    .ce1(exp_table1_ce1),
    .q1(exp_table1_q1),
    .address2(exp_table1_address2),
    .ce2(exp_table1_ce2),
    .q2(exp_table1_q2),
    .address3(exp_table1_address3),
    .ce3(exp_table1_ce3),
    .q3(exp_table1_q3),
    .address4(exp_table1_address4),
    .ce4(exp_table1_ce4),
    .q4(exp_table1_q4)
);

softmax_latency_ap_fixed_ap_fixed_softmax_config13_s_invecud #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table2_address0),
    .ce0(invert_table2_ce0),
    .q0(invert_table2_q0)
);

myproject_mul_mul_17ns_18s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_17ns_18s_26_3_1_U3091(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_459_p0),
    .din1(grp_fu_459_p1),
    .ce(grp_fu_459_ce),
    .dout(grp_fu_459_p2)
);

myproject_mul_mul_17ns_18s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_17ns_18s_26_3_1_U3092(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_466_p0),
    .din1(grp_fu_466_p1),
    .ce(grp_fu_466_ce),
    .dout(grp_fu_466_p2)
);

myproject_mul_mul_17ns_18s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_17ns_18s_26_3_1_U3093(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_473_p0),
    .din1(grp_fu_473_p1),
    .ce(grp_fu_473_ce),
    .dout(grp_fu_473_p2)
);

myproject_mul_mul_17ns_18s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_17ns_18s_26_3_1_U3094(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_480_p0),
    .din1(grp_fu_480_p1),
    .ce(grp_fu_480_ce),
    .dout(grp_fu_480_p2)
);

myproject_mul_mul_17ns_18s_26_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 26 ))
myproject_mul_mul_17ns_18s_26_3_1_U3095(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_487_p0),
    .din1(grp_fu_487_p1),
    .ce(grp_fu_487_ce),
    .dout(grp_fu_487_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_res_0_V_reg_519 <= exp_table1_q0;
        exp_res_1_V_reg_526 <= exp_table1_q1;
        exp_res_2_V_reg_533 <= exp_table1_q2;
        exp_res_3_V_reg_540 <= exp_table1_q3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_res_0_V_reg_519_pp0_iter2_reg <= exp_res_0_V_reg_519;
        exp_res_0_V_reg_519_pp0_iter3_reg <= exp_res_0_V_reg_519_pp0_iter2_reg;
        exp_res_0_V_reg_519_pp0_iter4_reg <= exp_res_0_V_reg_519_pp0_iter3_reg;
        exp_res_1_V_reg_526_pp0_iter2_reg <= exp_res_1_V_reg_526;
        exp_res_1_V_reg_526_pp0_iter3_reg <= exp_res_1_V_reg_526_pp0_iter2_reg;
        exp_res_1_V_reg_526_pp0_iter4_reg <= exp_res_1_V_reg_526_pp0_iter3_reg;
        exp_res_2_V_reg_533_pp0_iter2_reg <= exp_res_2_V_reg_533;
        exp_res_2_V_reg_533_pp0_iter3_reg <= exp_res_2_V_reg_533_pp0_iter2_reg;
        exp_res_2_V_reg_533_pp0_iter4_reg <= exp_res_2_V_reg_533_pp0_iter3_reg;
        exp_res_3_V_reg_540_pp0_iter2_reg <= exp_res_3_V_reg_540;
        exp_res_3_V_reg_540_pp0_iter3_reg <= exp_res_3_V_reg_540_pp0_iter2_reg;
        exp_res_3_V_reg_540_pp0_iter4_reg <= exp_res_3_V_reg_540_pp0_iter3_reg;
        exp_res_4_V_reg_552_pp0_iter3_reg <= exp_res_4_V_reg_552;
        exp_res_4_V_reg_552_pp0_iter4_reg <= exp_res_4_V_reg_552_pp0_iter3_reg;
        inv_exp_sum_V_reg_569 <= invert_table2_q0;
        p_Val2_8_reg_558 <= p_Val2_8_fu_306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_res_4_V_reg_552 <= exp_table1_q4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_V_4_reg_514 <= {{data_4_V_read[15:6]}};
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to6 = 1'b1;
    end else begin
        ap_idle_pp0_0to6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce0 = 1'b1;
    end else begin
        exp_table1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce1 = 1'b1;
    end else begin
        exp_table1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce2 = 1'b1;
    end else begin
        exp_table1_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce3 = 1'b1;
    end else begin
        exp_table1_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce4 = 1'b1;
    end else begin
        exp_table1_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_459_ce = 1'b1;
    end else begin
        grp_fu_459_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_466_ce = 1'b1;
    end else begin
        grp_fu_466_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_473_ce = 1'b1;
    end else begin
        grp_fu_473_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_480_ce = 1'b1;
    end else begin
        grp_fu_480_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_487_ce = 1'b1;
    end else begin
        grp_fu_487_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        invert_table2_ce0 = 1'b1;
    end else begin
        invert_table2_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln746_1_fu_282_p2 = (exp_res_2_V_reg_533 + exp_res_3_V_reg_540);

assign add_ln746_fu_252_p2 = (exp_res_0_V_reg_519 + exp_res_1_V_reg_526);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = {{grp_fu_459_p2[25:10]}};

assign ap_return_1 = {{grp_fu_466_p2[25:10]}};

assign ap_return_2 = {{grp_fu_473_p2[25:10]}};

assign ap_return_3 = {{grp_fu_480_p2[25:10]}};

assign ap_return_4 = {{grp_fu_487_p2[25:10]}};

assign exp_table1_address0 = zext_ln251_fu_170_p1;

assign exp_table1_address1 = zext_ln251_1_fu_185_p1;

assign exp_table1_address2 = zext_ln251_2_fu_200_p1;

assign exp_table1_address3 = zext_ln251_3_fu_215_p1;

assign exp_table1_address4 = zext_ln251_4_fu_230_p1;

assign grp_fu_459_p0 = grp_fu_459_p00;

assign grp_fu_459_p00 = exp_res_0_V_reg_519_pp0_iter4_reg;

assign grp_fu_459_p1 = sext_ln1116_fu_366_p1;

assign grp_fu_466_p0 = grp_fu_466_p00;

assign grp_fu_466_p00 = exp_res_1_V_reg_526_pp0_iter4_reg;

assign grp_fu_466_p1 = sext_ln1116_fu_366_p1;

assign grp_fu_473_p0 = grp_fu_473_p00;

assign grp_fu_473_p00 = exp_res_2_V_reg_533_pp0_iter4_reg;

assign grp_fu_473_p1 = sext_ln1116_fu_366_p1;

assign grp_fu_480_p0 = grp_fu_480_p00;

assign grp_fu_480_p00 = exp_res_3_V_reg_540_pp0_iter4_reg;

assign grp_fu_480_p1 = sext_ln1116_fu_366_p1;

assign grp_fu_487_p0 = grp_fu_487_p00;

assign grp_fu_487_p00 = exp_res_4_V_reg_552_pp0_iter4_reg;

assign grp_fu_487_p1 = sext_ln1116_fu_366_p1;

assign invert_table2_address0 = zext_ln259_fu_361_p1;

assign p_Result_10_fu_286_p3 = p_Val2_5_fu_276_p2[32'd17];

assign p_Result_11_fu_315_p3 = p_Val2_8_reg_558[32'd17];

assign p_Result_12_fu_335_p3 = p_Val2_11_fu_329_p2[32'd17];

assign p_Result_s_fu_256_p3 = p_Val2_2_fu_246_p2[32'd17];

assign p_Val2_11_fu_329_p2 = (p_Val2_9_fu_322_p3 + zext_ln203_4_fu_312_p1);

assign p_Val2_2_fu_246_p2 = (zext_ln203_1_fu_237_p1 + zext_ln203_fu_234_p1);

assign p_Val2_5_fu_276_p2 = (zext_ln203_3_fu_243_p1 + zext_ln203_2_fu_240_p1);

assign p_Val2_6_fu_264_p3 = ((p_Result_s_fu_256_p3[0:0] === 1'b1) ? 17'd131071 : add_ln746_fu_252_p2);

assign p_Val2_7_fu_294_p3 = ((p_Result_10_fu_286_p3[0:0] === 1'b1) ? 17'd131071 : add_ln746_1_fu_282_p2);

assign p_Val2_8_fu_306_p2 = (zext_ln746_1_fu_302_p1 + zext_ln746_fu_272_p1);

assign p_Val2_9_fu_322_p3 = ((p_Result_11_fu_315_p3[0:0] === 1'b1) ? 18'd131071 : p_Val2_8_reg_558);

assign sext_ln1116_fu_366_p1 = $signed(inv_exp_sum_V_reg_569);

assign tmp_fu_343_p4 = {{p_Val2_11_fu_329_p2[17:8]}};

assign y_V_1_fu_175_p4 = {{data_1_V_read[15:6]}};

assign y_V_2_fu_190_p4 = {{data_2_V_read[15:6]}};

assign y_V_3_fu_205_p4 = {{data_3_V_read[15:6]}};

assign y_V_5_fu_353_p3 = ((p_Result_12_fu_335_p3[0:0] === 1'b1) ? 10'd511 : tmp_fu_343_p4);

assign y_V_fu_160_p4 = {{data_0_V_read[15:6]}};

assign zext_ln203_1_fu_237_p1 = exp_res_1_V_reg_526;

assign zext_ln203_2_fu_240_p1 = exp_res_2_V_reg_533;

assign zext_ln203_3_fu_243_p1 = exp_res_3_V_reg_540;

assign zext_ln203_4_fu_312_p1 = exp_res_4_V_reg_552;

assign zext_ln203_fu_234_p1 = exp_res_0_V_reg_519;

assign zext_ln251_1_fu_185_p1 = y_V_1_fu_175_p4;

assign zext_ln251_2_fu_200_p1 = y_V_2_fu_190_p4;

assign zext_ln251_3_fu_215_p1 = y_V_3_fu_205_p4;

assign zext_ln251_4_fu_230_p1 = y_V_4_reg_514;

assign zext_ln251_fu_170_p1 = y_V_fu_160_p4;

assign zext_ln259_fu_361_p1 = y_V_5_fu_353_p3;

assign zext_ln746_1_fu_302_p1 = p_Val2_7_fu_294_p3;

assign zext_ln746_fu_272_p1 = p_Val2_6_fu_264_p3;

endmodule //softmax_latency_ap_fixed_ap_fixed_softmax_config13_s
