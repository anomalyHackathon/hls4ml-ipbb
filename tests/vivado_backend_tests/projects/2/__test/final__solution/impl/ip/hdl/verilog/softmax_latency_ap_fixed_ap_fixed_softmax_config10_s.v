// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module softmax_latency_ap_fixed_ap_fixed_softmax_config10_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        data_0_V_read,
        data_1_V_read,
        data_2_V_read,
        data_3_V_read,
        data_4_V_read,
        data_5_V_read,
        data_6_V_read,
        data_7_V_read,
        data_8_V_read,
        data_9_V_read,
        data_10_V_read,
        data_11_V_read,
        data_12_V_read,
        data_13_V_read,
        data_14_V_read,
        data_15_V_read,
        data_16_V_read,
        data_17_V_read,
        data_18_V_read,
        data_19_V_read,
        data_20_V_read,
        data_21_V_read,
        data_22_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] data_0_V_read;
input  [15:0] data_1_V_read;
input  [15:0] data_2_V_read;
input  [15:0] data_3_V_read;
input  [15:0] data_4_V_read;
input  [15:0] data_5_V_read;
input  [15:0] data_6_V_read;
input  [15:0] data_7_V_read;
input  [15:0] data_8_V_read;
input  [15:0] data_9_V_read;
input  [15:0] data_10_V_read;
input  [15:0] data_11_V_read;
input  [15:0] data_12_V_read;
input  [15:0] data_13_V_read;
input  [15:0] data_14_V_read;
input  [15:0] data_15_V_read;
input  [15:0] data_16_V_read;
input  [15:0] data_17_V_read;
input  [15:0] data_18_V_read;
input  [15:0] data_19_V_read;
input  [15:0] data_20_V_read;
input  [15:0] data_21_V_read;
input  [15:0] data_22_V_read;
output  [33:0] ap_return_0;
output  [33:0] ap_return_1;
output  [33:0] ap_return_2;
output  [33:0] ap_return_3;
output  [33:0] ap_return_4;
output  [33:0] ap_return_5;
output  [33:0] ap_return_6;
output  [33:0] ap_return_7;
output  [33:0] ap_return_8;
output  [33:0] ap_return_9;
output  [33:0] ap_return_10;
output  [33:0] ap_return_11;
output  [33:0] ap_return_12;
output  [33:0] ap_return_13;
output  [33:0] ap_return_14;
output  [33:0] ap_return_15;
output  [33:0] ap_return_16;
output  [33:0] ap_return_17;
output  [33:0] ap_return_18;
output  [33:0] ap_return_19;
output  [33:0] ap_return_20;
output  [33:0] ap_return_21;
output  [33:0] ap_return_22;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] exp_table1_address0;
reg    exp_table1_ce0;
wire   [17:0] exp_table1_q0;
wire   [9:0] exp_table1_address1;
reg    exp_table1_ce1;
wire   [17:0] exp_table1_q1;
wire   [9:0] exp_table1_address2;
reg    exp_table1_ce2;
wire   [17:0] exp_table1_q2;
wire   [9:0] exp_table1_address3;
reg    exp_table1_ce3;
wire   [17:0] exp_table1_q3;
wire   [9:0] exp_table1_address4;
reg    exp_table1_ce4;
wire   [17:0] exp_table1_q4;
wire   [9:0] exp_table1_address5;
reg    exp_table1_ce5;
wire   [17:0] exp_table1_q5;
wire   [9:0] exp_table1_address6;
reg    exp_table1_ce6;
wire   [17:0] exp_table1_q6;
wire   [9:0] exp_table1_address7;
reg    exp_table1_ce7;
wire   [17:0] exp_table1_q7;
wire   [9:0] exp_table1_address8;
reg    exp_table1_ce8;
wire   [17:0] exp_table1_q8;
wire   [9:0] exp_table1_address9;
reg    exp_table1_ce9;
wire   [17:0] exp_table1_q9;
wire   [9:0] exp_table1_address10;
reg    exp_table1_ce10;
wire   [17:0] exp_table1_q10;
wire   [9:0] exp_table1_address11;
reg    exp_table1_ce11;
wire   [17:0] exp_table1_q11;
wire   [9:0] exp_table1_address12;
reg    exp_table1_ce12;
wire   [17:0] exp_table1_q12;
wire   [9:0] exp_table1_address13;
reg    exp_table1_ce13;
wire   [17:0] exp_table1_q13;
wire   [9:0] exp_table1_address14;
reg    exp_table1_ce14;
wire   [17:0] exp_table1_q14;
wire   [9:0] exp_table1_address15;
reg    exp_table1_ce15;
wire   [17:0] exp_table1_q15;
wire   [9:0] exp_table1_address16;
reg    exp_table1_ce16;
wire   [17:0] exp_table1_q16;
wire   [9:0] exp_table1_address17;
reg    exp_table1_ce17;
wire   [17:0] exp_table1_q17;
wire   [9:0] exp_table1_address18;
reg    exp_table1_ce18;
wire   [17:0] exp_table1_q18;
wire   [9:0] exp_table1_address19;
reg    exp_table1_ce19;
wire   [17:0] exp_table1_q19;
wire   [9:0] exp_table1_address20;
reg    exp_table1_ce20;
wire   [17:0] exp_table1_q20;
wire   [9:0] exp_table1_address21;
reg    exp_table1_ce21;
wire   [17:0] exp_table1_q21;
wire   [9:0] exp_table1_address22;
reg    exp_table1_ce22;
wire   [17:0] exp_table1_q22;
wire   [9:0] invert_table2_address0;
reg    invert_table2_ce0;
wire   [17:0] invert_table2_q0;
reg   [9:0] y_V_reg_1324;
reg   [9:0] y_V_1_reg_1329;
reg   [9:0] y_V_2_reg_1334;
reg   [9:0] y_V_3_reg_1339;
reg   [9:0] y_V_6_reg_1354;
reg   [9:0] y_V_7_reg_1359;
reg   [9:0] y_V_8_reg_1364;
reg   [9:0] y_V_9_reg_1369;
reg   [9:0] y_V_10_reg_1374;
reg   [9:0] y_V_11_reg_1379;
reg   [9:0] y_V_12_reg_1384;
reg   [9:0] y_V_13_reg_1389;
reg   [9:0] y_V_14_reg_1394;
reg   [9:0] y_V_15_reg_1399;
reg   [9:0] y_V_21_reg_1429;
reg   [9:0] y_V_22_reg_1434;
reg  signed [17:0] exp_res_4_V_reg_1459;
reg  signed [17:0] exp_res_4_V_reg_1459_pp0_iter2_reg;
reg  signed [17:0] exp_res_5_V_reg_1465;
reg  signed [17:0] exp_res_5_V_reg_1465_pp0_iter2_reg;
reg  signed [17:0] exp_res_16_V_reg_1521;
reg  signed [17:0] exp_res_16_V_reg_1521_pp0_iter2_reg;
reg  signed [17:0] exp_res_17_V_reg_1527;
reg  signed [17:0] exp_res_17_V_reg_1527_pp0_iter2_reg;
reg  signed [17:0] exp_res_18_V_reg_1533;
reg  signed [17:0] exp_res_18_V_reg_1533_pp0_iter2_reg;
reg  signed [17:0] exp_res_19_V_reg_1539;
reg  signed [17:0] exp_res_19_V_reg_1539_pp0_iter2_reg;
reg  signed [17:0] exp_res_20_V_reg_1545;
reg  signed [17:0] exp_res_20_V_reg_1545_pp0_iter2_reg;
reg  signed [17:0] exp_res_0_V_reg_1561;
reg  signed [17:0] exp_res_1_V_reg_1566;
reg  signed [17:0] exp_res_2_V_reg_1571;
reg  signed [17:0] exp_res_3_V_reg_1576;
reg  signed [17:0] exp_res_6_V_reg_1581;
reg  signed [17:0] exp_res_7_V_reg_1586;
reg  signed [17:0] exp_res_8_V_reg_1591;
reg  signed [17:0] exp_res_9_V_reg_1596;
reg  signed [17:0] exp_res_10_V_reg_1601;
reg  signed [17:0] exp_res_11_V_reg_1606;
reg  signed [17:0] exp_res_12_V_reg_1611;
reg  signed [17:0] exp_res_13_V_reg_1616;
reg  signed [17:0] exp_res_14_V_reg_1621;
reg  signed [17:0] exp_res_15_V_reg_1626;
reg  signed [17:0] exp_res_21_V_reg_1631;
reg  signed [17:0] exp_res_22_V_reg_1636;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln251_4_fu_556_p1;
wire   [63:0] zext_ln251_5_fu_571_p1;
wire   [63:0] zext_ln251_16_fu_686_p1;
wire   [63:0] zext_ln251_17_fu_701_p1;
wire   [63:0] zext_ln251_18_fu_716_p1;
wire   [63:0] zext_ln251_19_fu_731_p1;
wire   [63:0] zext_ln251_20_fu_746_p1;
wire   [63:0] zext_ln251_fu_771_p1;
wire   [63:0] zext_ln251_1_fu_775_p1;
wire   [63:0] zext_ln251_2_fu_779_p1;
wire   [63:0] zext_ln251_3_fu_783_p1;
wire   [63:0] zext_ln251_6_fu_787_p1;
wire   [63:0] zext_ln251_7_fu_791_p1;
wire   [63:0] zext_ln251_8_fu_795_p1;
wire   [63:0] zext_ln251_9_fu_799_p1;
wire   [63:0] zext_ln251_10_fu_803_p1;
wire   [63:0] zext_ln251_11_fu_807_p1;
wire   [63:0] zext_ln251_12_fu_811_p1;
wire   [63:0] zext_ln251_13_fu_815_p1;
wire   [63:0] zext_ln251_14_fu_819_p1;
wire   [63:0] zext_ln251_15_fu_823_p1;
wire   [63:0] zext_ln251_21_fu_827_p1;
wire   [63:0] zext_ln251_22_fu_831_p1;
wire   [63:0] zext_ln259_fu_970_p1;
wire   [9:0] y_V_4_fu_546_p4;
wire   [9:0] y_V_5_fu_561_p4;
wire   [9:0] y_V_16_fu_676_p4;
wire   [9:0] y_V_17_fu_691_p4;
wire   [9:0] y_V_18_fu_706_p4;
wire   [9:0] y_V_19_fu_721_p4;
wire   [9:0] y_V_20_fu_736_p4;
wire  signed [17:0] add_ln703_fu_835_p0;
wire  signed [17:0] add_ln703_fu_835_p1;
wire  signed [17:0] add_ln703_1_fu_841_p0;
wire  signed [17:0] add_ln703_1_fu_841_p1;
wire   [17:0] add_ln703_1_fu_841_p2;
wire  signed [17:0] add_ln703_2_fu_847_p1;
wire   [17:0] add_ln703_2_fu_847_p2;
wire   [17:0] add_ln703_fu_835_p2;
wire   [17:0] add_ln703_4_fu_859_p2;
wire  signed [17:0] add_ln703_5_fu_863_p1;
wire  signed [17:0] add_ln703_6_fu_869_p0;
wire  signed [17:0] add_ln703_6_fu_869_p1;
wire   [17:0] add_ln703_6_fu_869_p2;
wire  signed [17:0] add_ln703_7_fu_875_p1;
wire   [17:0] add_ln703_7_fu_875_p2;
wire   [17:0] add_ln703_5_fu_863_p2;
wire   [17:0] add_ln703_8_fu_881_p2;
wire   [17:0] add_ln703_3_fu_853_p2;
wire  signed [17:0] add_ln703_10_fu_893_p0;
wire  signed [17:0] add_ln703_10_fu_893_p1;
wire   [17:0] add_ln703_10_fu_893_p2;
wire  signed [17:0] add_ln703_11_fu_899_p1;
wire  signed [17:0] add_ln703_12_fu_905_p0;
wire  signed [17:0] add_ln703_12_fu_905_p1;
wire   [17:0] add_ln703_12_fu_905_p2;
wire  signed [17:0] add_ln703_13_fu_911_p1;
wire   [17:0] add_ln703_13_fu_911_p2;
wire   [17:0] add_ln703_11_fu_899_p2;
wire   [17:0] add_ln703_15_fu_923_p2;
wire  signed [17:0] add_ln703_16_fu_927_p1;
wire   [17:0] add_ln703_17_fu_933_p2;
wire   [17:0] add_ln703_18_fu_937_p2;
wire   [17:0] add_ln703_16_fu_927_p2;
wire   [17:0] add_ln703_19_fu_942_p2;
wire   [17:0] add_ln703_14_fu_917_p2;
wire   [17:0] add_ln703_20_fu_948_p2;
wire   [17:0] add_ln703_9_fu_887_p2;
wire   [17:0] exp_sum_V_fu_954_p2;
wire   [9:0] y_V_23_fu_960_p4;
wire  signed [33:0] mul_ln703_fu_1163_p2;
wire  signed [33:0] mul_ln703_1_fu_1170_p2;
wire  signed [33:0] mul_ln703_2_fu_1177_p2;
wire  signed [33:0] mul_ln703_3_fu_1184_p2;
wire  signed [33:0] mul_ln703_4_fu_1191_p2;
wire  signed [33:0] mul_ln703_5_fu_1198_p2;
wire  signed [33:0] mul_ln703_6_fu_1205_p2;
wire  signed [33:0] mul_ln703_7_fu_1212_p2;
wire  signed [33:0] mul_ln703_8_fu_1219_p2;
wire  signed [33:0] mul_ln703_9_fu_1226_p2;
wire  signed [33:0] mul_ln703_10_fu_1233_p2;
wire  signed [33:0] mul_ln703_11_fu_1240_p2;
wire  signed [33:0] mul_ln703_12_fu_1247_p2;
wire  signed [33:0] mul_ln703_13_fu_1254_p2;
wire  signed [33:0] mul_ln703_14_fu_1261_p2;
wire  signed [33:0] mul_ln703_15_fu_1268_p2;
wire  signed [33:0] mul_ln703_16_fu_1275_p2;
wire  signed [33:0] mul_ln703_17_fu_1282_p2;
wire  signed [33:0] mul_ln703_18_fu_1289_p2;
wire  signed [33:0] mul_ln703_19_fu_1296_p2;
wire  signed [33:0] mul_ln703_20_fu_1303_p2;
wire  signed [33:0] mul_ln703_21_fu_1310_p2;
wire  signed [33:0] mul_ln703_22_fu_1317_p2;
wire  signed [17:0] mul_ln703_fu_1163_p0;
wire  signed [33:0] sext_ln703_fu_975_p1;
wire  signed [17:0] mul_ln703_1_fu_1170_p0;
wire  signed [17:0] mul_ln703_2_fu_1177_p0;
wire  signed [17:0] mul_ln703_3_fu_1184_p0;
wire  signed [17:0] mul_ln703_4_fu_1191_p0;
wire  signed [17:0] mul_ln703_5_fu_1198_p0;
wire  signed [17:0] mul_ln703_6_fu_1205_p0;
wire  signed [17:0] mul_ln703_7_fu_1212_p0;
wire  signed [17:0] mul_ln703_8_fu_1219_p0;
wire  signed [17:0] mul_ln703_9_fu_1226_p0;
wire  signed [17:0] mul_ln703_10_fu_1233_p0;
wire  signed [17:0] mul_ln703_11_fu_1240_p0;
wire  signed [17:0] mul_ln703_12_fu_1247_p0;
wire  signed [17:0] mul_ln703_13_fu_1254_p0;
wire  signed [17:0] mul_ln703_14_fu_1261_p0;
wire  signed [17:0] mul_ln703_15_fu_1268_p0;
wire  signed [17:0] mul_ln703_16_fu_1275_p0;
wire  signed [17:0] mul_ln703_17_fu_1282_p0;
wire  signed [17:0] mul_ln703_18_fu_1289_p0;
wire  signed [17:0] mul_ln703_19_fu_1296_p0;
wire  signed [17:0] mul_ln703_20_fu_1303_p0;
wire  signed [17:0] mul_ln703_21_fu_1310_p0;
wire  signed [17:0] mul_ln703_22_fu_1317_p0;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

softmax_latency_ap_fixed_ap_fixed_softmax_config10_s_exp_bkb #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table1_address0),
    .ce0(exp_table1_ce0),
    .q0(exp_table1_q0),
    .address1(exp_table1_address1),
    .ce1(exp_table1_ce1),
    .q1(exp_table1_q1),
    .address2(exp_table1_address2),
    .ce2(exp_table1_ce2),
    .q2(exp_table1_q2),
    .address3(exp_table1_address3),
    .ce3(exp_table1_ce3),
    .q3(exp_table1_q3),
    .address4(exp_table1_address4),
    .ce4(exp_table1_ce4),
    .q4(exp_table1_q4),
    .address5(exp_table1_address5),
    .ce5(exp_table1_ce5),
    .q5(exp_table1_q5),
    .address6(exp_table1_address6),
    .ce6(exp_table1_ce6),
    .q6(exp_table1_q6),
    .address7(exp_table1_address7),
    .ce7(exp_table1_ce7),
    .q7(exp_table1_q7),
    .address8(exp_table1_address8),
    .ce8(exp_table1_ce8),
    .q8(exp_table1_q8),
    .address9(exp_table1_address9),
    .ce9(exp_table1_ce9),
    .q9(exp_table1_q9),
    .address10(exp_table1_address10),
    .ce10(exp_table1_ce10),
    .q10(exp_table1_q10),
    .address11(exp_table1_address11),
    .ce11(exp_table1_ce11),
    .q11(exp_table1_q11),
    .address12(exp_table1_address12),
    .ce12(exp_table1_ce12),
    .q12(exp_table1_q12),
    .address13(exp_table1_address13),
    .ce13(exp_table1_ce13),
    .q13(exp_table1_q13),
    .address14(exp_table1_address14),
    .ce14(exp_table1_ce14),
    .q14(exp_table1_q14),
    .address15(exp_table1_address15),
    .ce15(exp_table1_ce15),
    .q15(exp_table1_q15),
    .address16(exp_table1_address16),
    .ce16(exp_table1_ce16),
    .q16(exp_table1_q16),
    .address17(exp_table1_address17),
    .ce17(exp_table1_ce17),
    .q17(exp_table1_q17),
    .address18(exp_table1_address18),
    .ce18(exp_table1_ce18),
    .q18(exp_table1_q18),
    .address19(exp_table1_address19),
    .ce19(exp_table1_ce19),
    .q19(exp_table1_q19),
    .address20(exp_table1_address20),
    .ce20(exp_table1_ce20),
    .q20(exp_table1_q20),
    .address21(exp_table1_address21),
    .ce21(exp_table1_ce21),
    .q21(exp_table1_q21),
    .address22(exp_table1_address22),
    .ce22(exp_table1_ce22),
    .q22(exp_table1_q22)
);

softmax_latency_ap_fixed_ap_fixed_softmax_config10_s_invecud #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table2_address0),
    .ce0(invert_table2_ce0),
    .q0(invert_table2_q0)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U194(
    .din0(mul_ln703_fu_1163_p0),
    .din1(exp_res_0_V_reg_1561),
    .dout(mul_ln703_fu_1163_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U195(
    .din0(mul_ln703_1_fu_1170_p0),
    .din1(exp_res_1_V_reg_1566),
    .dout(mul_ln703_1_fu_1170_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U196(
    .din0(mul_ln703_2_fu_1177_p0),
    .din1(exp_res_2_V_reg_1571),
    .dout(mul_ln703_2_fu_1177_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U197(
    .din0(mul_ln703_3_fu_1184_p0),
    .din1(exp_res_3_V_reg_1576),
    .dout(mul_ln703_3_fu_1184_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U198(
    .din0(mul_ln703_4_fu_1191_p0),
    .din1(exp_res_4_V_reg_1459_pp0_iter2_reg),
    .dout(mul_ln703_4_fu_1191_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U199(
    .din0(mul_ln703_5_fu_1198_p0),
    .din1(exp_res_5_V_reg_1465_pp0_iter2_reg),
    .dout(mul_ln703_5_fu_1198_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U200(
    .din0(mul_ln703_6_fu_1205_p0),
    .din1(exp_res_6_V_reg_1581),
    .dout(mul_ln703_6_fu_1205_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U201(
    .din0(mul_ln703_7_fu_1212_p0),
    .din1(exp_res_7_V_reg_1586),
    .dout(mul_ln703_7_fu_1212_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U202(
    .din0(mul_ln703_8_fu_1219_p0),
    .din1(exp_res_8_V_reg_1591),
    .dout(mul_ln703_8_fu_1219_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U203(
    .din0(mul_ln703_9_fu_1226_p0),
    .din1(exp_res_9_V_reg_1596),
    .dout(mul_ln703_9_fu_1226_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U204(
    .din0(mul_ln703_10_fu_1233_p0),
    .din1(exp_res_10_V_reg_1601),
    .dout(mul_ln703_10_fu_1233_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U205(
    .din0(mul_ln703_11_fu_1240_p0),
    .din1(exp_res_11_V_reg_1606),
    .dout(mul_ln703_11_fu_1240_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U206(
    .din0(mul_ln703_12_fu_1247_p0),
    .din1(exp_res_12_V_reg_1611),
    .dout(mul_ln703_12_fu_1247_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U207(
    .din0(mul_ln703_13_fu_1254_p0),
    .din1(exp_res_13_V_reg_1616),
    .dout(mul_ln703_13_fu_1254_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U208(
    .din0(mul_ln703_14_fu_1261_p0),
    .din1(exp_res_14_V_reg_1621),
    .dout(mul_ln703_14_fu_1261_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U209(
    .din0(mul_ln703_15_fu_1268_p0),
    .din1(exp_res_15_V_reg_1626),
    .dout(mul_ln703_15_fu_1268_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U210(
    .din0(mul_ln703_16_fu_1275_p0),
    .din1(exp_res_16_V_reg_1521_pp0_iter2_reg),
    .dout(mul_ln703_16_fu_1275_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U211(
    .din0(mul_ln703_17_fu_1282_p0),
    .din1(exp_res_17_V_reg_1527_pp0_iter2_reg),
    .dout(mul_ln703_17_fu_1282_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U212(
    .din0(mul_ln703_18_fu_1289_p0),
    .din1(exp_res_18_V_reg_1533_pp0_iter2_reg),
    .dout(mul_ln703_18_fu_1289_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U213(
    .din0(mul_ln703_19_fu_1296_p0),
    .din1(exp_res_19_V_reg_1539_pp0_iter2_reg),
    .dout(mul_ln703_19_fu_1296_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U214(
    .din0(mul_ln703_20_fu_1303_p0),
    .din1(exp_res_20_V_reg_1545_pp0_iter2_reg),
    .dout(mul_ln703_20_fu_1303_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U215(
    .din0(mul_ln703_21_fu_1310_p0),
    .din1(exp_res_21_V_reg_1631),
    .dout(mul_ln703_21_fu_1310_p2)
);

myproject_mul_mul_18s_18s_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
myproject_mul_mul_18s_18s_34_1_1_U216(
    .din0(mul_ln703_22_fu_1317_p0),
    .din1(exp_res_22_V_reg_1636),
    .dout(mul_ln703_22_fu_1317_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        exp_res_0_V_reg_1561 <= exp_table1_q7;
        exp_res_10_V_reg_1601 <= exp_table1_q15;
        exp_res_11_V_reg_1606 <= exp_table1_q16;
        exp_res_12_V_reg_1611 <= exp_table1_q17;
        exp_res_13_V_reg_1616 <= exp_table1_q18;
        exp_res_14_V_reg_1621 <= exp_table1_q19;
        exp_res_15_V_reg_1626 <= exp_table1_q20;
        exp_res_1_V_reg_1566 <= exp_table1_q8;
        exp_res_21_V_reg_1631 <= exp_table1_q21;
        exp_res_22_V_reg_1636 <= exp_table1_q22;
        exp_res_2_V_reg_1571 <= exp_table1_q9;
        exp_res_3_V_reg_1576 <= exp_table1_q10;
        exp_res_6_V_reg_1581 <= exp_table1_q11;
        exp_res_7_V_reg_1586 <= exp_table1_q12;
        exp_res_8_V_reg_1591 <= exp_table1_q13;
        exp_res_9_V_reg_1596 <= exp_table1_q14;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_res_16_V_reg_1521 <= exp_table1_q2;
        exp_res_17_V_reg_1527 <= exp_table1_q3;
        exp_res_18_V_reg_1533 <= exp_table1_q4;
        exp_res_19_V_reg_1539 <= exp_table1_q5;
        exp_res_20_V_reg_1545 <= exp_table1_q6;
        exp_res_4_V_reg_1459 <= exp_table1_q0;
        exp_res_5_V_reg_1465 <= exp_table1_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_res_16_V_reg_1521_pp0_iter2_reg <= exp_res_16_V_reg_1521;
        exp_res_17_V_reg_1527_pp0_iter2_reg <= exp_res_17_V_reg_1527;
        exp_res_18_V_reg_1533_pp0_iter2_reg <= exp_res_18_V_reg_1533;
        exp_res_19_V_reg_1539_pp0_iter2_reg <= exp_res_19_V_reg_1539;
        exp_res_20_V_reg_1545_pp0_iter2_reg <= exp_res_20_V_reg_1545;
        exp_res_4_V_reg_1459_pp0_iter2_reg <= exp_res_4_V_reg_1459;
        exp_res_5_V_reg_1465_pp0_iter2_reg <= exp_res_5_V_reg_1465;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_V_10_reg_1374 <= {{data_10_V_read[15:6]}};
        y_V_11_reg_1379 <= {{data_11_V_read[15:6]}};
        y_V_12_reg_1384 <= {{data_12_V_read[15:6]}};
        y_V_13_reg_1389 <= {{data_13_V_read[15:6]}};
        y_V_14_reg_1394 <= {{data_14_V_read[15:6]}};
        y_V_15_reg_1399 <= {{data_15_V_read[15:6]}};
        y_V_1_reg_1329 <= {{data_1_V_read[15:6]}};
        y_V_21_reg_1429 <= {{data_21_V_read[15:6]}};
        y_V_22_reg_1434 <= {{data_22_V_read[15:6]}};
        y_V_2_reg_1334 <= {{data_2_V_read[15:6]}};
        y_V_3_reg_1339 <= {{data_3_V_read[15:6]}};
        y_V_6_reg_1354 <= {{data_6_V_read[15:6]}};
        y_V_7_reg_1359 <= {{data_7_V_read[15:6]}};
        y_V_8_reg_1364 <= {{data_8_V_read[15:6]}};
        y_V_9_reg_1369 <= {{data_9_V_read[15:6]}};
        y_V_reg_1324 <= {{data_0_V_read[15:6]}};
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce0 = 1'b1;
    end else begin
        exp_table1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce1 = 1'b1;
    end else begin
        exp_table1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce10 = 1'b1;
    end else begin
        exp_table1_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce11 = 1'b1;
    end else begin
        exp_table1_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce12 = 1'b1;
    end else begin
        exp_table1_ce12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce13 = 1'b1;
    end else begin
        exp_table1_ce13 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce14 = 1'b1;
    end else begin
        exp_table1_ce14 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce15 = 1'b1;
    end else begin
        exp_table1_ce15 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce16 = 1'b1;
    end else begin
        exp_table1_ce16 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce17 = 1'b1;
    end else begin
        exp_table1_ce17 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce18 = 1'b1;
    end else begin
        exp_table1_ce18 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce19 = 1'b1;
    end else begin
        exp_table1_ce19 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce2 = 1'b1;
    end else begin
        exp_table1_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce20 = 1'b1;
    end else begin
        exp_table1_ce20 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce21 = 1'b1;
    end else begin
        exp_table1_ce21 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce22 = 1'b1;
    end else begin
        exp_table1_ce22 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce3 = 1'b1;
    end else begin
        exp_table1_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce4 = 1'b1;
    end else begin
        exp_table1_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce5 = 1'b1;
    end else begin
        exp_table1_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce6 = 1'b1;
    end else begin
        exp_table1_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce7 = 1'b1;
    end else begin
        exp_table1_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce8 = 1'b1;
    end else begin
        exp_table1_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce9 = 1'b1;
    end else begin
        exp_table1_ce9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        invert_table2_ce0 = 1'b1;
    end else begin
        invert_table2_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln703_10_fu_893_p0 = exp_table1_q16;

assign add_ln703_10_fu_893_p1 = exp_table1_q15;

assign add_ln703_10_fu_893_p2 = ($signed(add_ln703_10_fu_893_p0) + $signed(add_ln703_10_fu_893_p1));

assign add_ln703_11_fu_899_p1 = exp_table1_q17;

assign add_ln703_11_fu_899_p2 = ($signed(add_ln703_10_fu_893_p2) + $signed(add_ln703_11_fu_899_p1));

assign add_ln703_12_fu_905_p0 = exp_table1_q13;

assign add_ln703_12_fu_905_p1 = exp_table1_q22;

assign add_ln703_12_fu_905_p2 = ($signed(add_ln703_12_fu_905_p0) + $signed(add_ln703_12_fu_905_p1));

assign add_ln703_13_fu_911_p1 = exp_table1_q14;

assign add_ln703_13_fu_911_p2 = ($signed(add_ln703_12_fu_905_p2) + $signed(add_ln703_13_fu_911_p1));

assign add_ln703_14_fu_917_p2 = (add_ln703_13_fu_911_p2 + add_ln703_11_fu_899_p2);

assign add_ln703_15_fu_923_p2 = ($signed(exp_res_20_V_reg_1545) + $signed(exp_res_19_V_reg_1539));

assign add_ln703_16_fu_927_p1 = exp_table1_q21;

assign add_ln703_16_fu_927_p2 = ($signed(add_ln703_15_fu_923_p2) + $signed(add_ln703_16_fu_927_p1));

assign add_ln703_17_fu_933_p2 = ($signed(exp_res_17_V_reg_1527) + $signed(exp_res_16_V_reg_1521));

assign add_ln703_18_fu_937_p2 = ($signed(add_ln703_17_fu_933_p2) + $signed(exp_res_18_V_reg_1533));

assign add_ln703_19_fu_942_p2 = (add_ln703_18_fu_937_p2 + add_ln703_16_fu_927_p2);

assign add_ln703_1_fu_841_p0 = exp_table1_q9;

assign add_ln703_1_fu_841_p1 = exp_table1_q12;

assign add_ln703_1_fu_841_p2 = ($signed(add_ln703_1_fu_841_p0) + $signed(add_ln703_1_fu_841_p1));

assign add_ln703_20_fu_948_p2 = (add_ln703_19_fu_942_p2 + add_ln703_14_fu_917_p2);

assign add_ln703_2_fu_847_p1 = exp_table1_q10;

assign add_ln703_2_fu_847_p2 = ($signed(add_ln703_1_fu_841_p2) + $signed(add_ln703_2_fu_847_p1));

assign add_ln703_3_fu_853_p2 = (add_ln703_2_fu_847_p2 + add_ln703_fu_835_p2);

assign add_ln703_4_fu_859_p2 = ($signed(exp_res_5_V_reg_1465) + $signed(exp_res_4_V_reg_1459));

assign add_ln703_5_fu_863_p1 = exp_table1_q11;

assign add_ln703_5_fu_863_p2 = ($signed(add_ln703_4_fu_859_p2) + $signed(add_ln703_5_fu_863_p1));

assign add_ln703_6_fu_869_p0 = exp_table1_q19;

assign add_ln703_6_fu_869_p1 = exp_table1_q18;

assign add_ln703_6_fu_869_p2 = ($signed(add_ln703_6_fu_869_p0) + $signed(add_ln703_6_fu_869_p1));

assign add_ln703_7_fu_875_p1 = exp_table1_q20;

assign add_ln703_7_fu_875_p2 = ($signed(add_ln703_6_fu_869_p2) + $signed(add_ln703_7_fu_875_p1));

assign add_ln703_8_fu_881_p2 = (add_ln703_7_fu_875_p2 + add_ln703_5_fu_863_p2);

assign add_ln703_9_fu_887_p2 = (add_ln703_8_fu_881_p2 + add_ln703_3_fu_853_p2);

assign add_ln703_fu_835_p0 = exp_table1_q7;

assign add_ln703_fu_835_p1 = exp_table1_q8;

assign add_ln703_fu_835_p2 = ($signed(add_ln703_fu_835_p0) + $signed(add_ln703_fu_835_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = mul_ln703_fu_1163_p2;

assign ap_return_1 = mul_ln703_1_fu_1170_p2;

assign ap_return_10 = mul_ln703_10_fu_1233_p2;

assign ap_return_11 = mul_ln703_11_fu_1240_p2;

assign ap_return_12 = mul_ln703_12_fu_1247_p2;

assign ap_return_13 = mul_ln703_13_fu_1254_p2;

assign ap_return_14 = mul_ln703_14_fu_1261_p2;

assign ap_return_15 = mul_ln703_15_fu_1268_p2;

assign ap_return_16 = mul_ln703_16_fu_1275_p2;

assign ap_return_17 = mul_ln703_17_fu_1282_p2;

assign ap_return_18 = mul_ln703_18_fu_1289_p2;

assign ap_return_19 = mul_ln703_19_fu_1296_p2;

assign ap_return_2 = mul_ln703_2_fu_1177_p2;

assign ap_return_20 = mul_ln703_20_fu_1303_p2;

assign ap_return_21 = mul_ln703_21_fu_1310_p2;

assign ap_return_22 = mul_ln703_22_fu_1317_p2;

assign ap_return_3 = mul_ln703_3_fu_1184_p2;

assign ap_return_4 = mul_ln703_4_fu_1191_p2;

assign ap_return_5 = mul_ln703_5_fu_1198_p2;

assign ap_return_6 = mul_ln703_6_fu_1205_p2;

assign ap_return_7 = mul_ln703_7_fu_1212_p2;

assign ap_return_8 = mul_ln703_8_fu_1219_p2;

assign ap_return_9 = mul_ln703_9_fu_1226_p2;

assign exp_sum_V_fu_954_p2 = (add_ln703_20_fu_948_p2 + add_ln703_9_fu_887_p2);

assign exp_table1_address0 = zext_ln251_4_fu_556_p1;

assign exp_table1_address1 = zext_ln251_5_fu_571_p1;

assign exp_table1_address10 = zext_ln251_3_fu_783_p1;

assign exp_table1_address11 = zext_ln251_6_fu_787_p1;

assign exp_table1_address12 = zext_ln251_7_fu_791_p1;

assign exp_table1_address13 = zext_ln251_8_fu_795_p1;

assign exp_table1_address14 = zext_ln251_9_fu_799_p1;

assign exp_table1_address15 = zext_ln251_10_fu_803_p1;

assign exp_table1_address16 = zext_ln251_11_fu_807_p1;

assign exp_table1_address17 = zext_ln251_12_fu_811_p1;

assign exp_table1_address18 = zext_ln251_13_fu_815_p1;

assign exp_table1_address19 = zext_ln251_14_fu_819_p1;

assign exp_table1_address2 = zext_ln251_16_fu_686_p1;

assign exp_table1_address20 = zext_ln251_15_fu_823_p1;

assign exp_table1_address21 = zext_ln251_21_fu_827_p1;

assign exp_table1_address22 = zext_ln251_22_fu_831_p1;

assign exp_table1_address3 = zext_ln251_17_fu_701_p1;

assign exp_table1_address4 = zext_ln251_18_fu_716_p1;

assign exp_table1_address5 = zext_ln251_19_fu_731_p1;

assign exp_table1_address6 = zext_ln251_20_fu_746_p1;

assign exp_table1_address7 = zext_ln251_fu_771_p1;

assign exp_table1_address8 = zext_ln251_1_fu_775_p1;

assign exp_table1_address9 = zext_ln251_2_fu_779_p1;

assign invert_table2_address0 = zext_ln259_fu_970_p1;

assign mul_ln703_10_fu_1233_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_11_fu_1240_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_12_fu_1247_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_13_fu_1254_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_14_fu_1261_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_15_fu_1268_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_16_fu_1275_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_17_fu_1282_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_18_fu_1289_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_19_fu_1296_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_1_fu_1170_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_20_fu_1303_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_21_fu_1310_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_22_fu_1317_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_2_fu_1177_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_3_fu_1184_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_4_fu_1191_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_5_fu_1198_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_6_fu_1205_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_7_fu_1212_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_8_fu_1219_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_9_fu_1226_p0 = sext_ln703_fu_975_p1;

assign mul_ln703_fu_1163_p0 = sext_ln703_fu_975_p1;

assign sext_ln703_fu_975_p1 = $signed(invert_table2_q0);

assign y_V_16_fu_676_p4 = {{data_16_V_read[15:6]}};

assign y_V_17_fu_691_p4 = {{data_17_V_read[15:6]}};

assign y_V_18_fu_706_p4 = {{data_18_V_read[15:6]}};

assign y_V_19_fu_721_p4 = {{data_19_V_read[15:6]}};

assign y_V_20_fu_736_p4 = {{data_20_V_read[15:6]}};

assign y_V_23_fu_960_p4 = {{exp_sum_V_fu_954_p2[17:8]}};

assign y_V_4_fu_546_p4 = {{data_4_V_read[15:6]}};

assign y_V_5_fu_561_p4 = {{data_5_V_read[15:6]}};

assign zext_ln251_10_fu_803_p1 = y_V_10_reg_1374;

assign zext_ln251_11_fu_807_p1 = y_V_11_reg_1379;

assign zext_ln251_12_fu_811_p1 = y_V_12_reg_1384;

assign zext_ln251_13_fu_815_p1 = y_V_13_reg_1389;

assign zext_ln251_14_fu_819_p1 = y_V_14_reg_1394;

assign zext_ln251_15_fu_823_p1 = y_V_15_reg_1399;

assign zext_ln251_16_fu_686_p1 = y_V_16_fu_676_p4;

assign zext_ln251_17_fu_701_p1 = y_V_17_fu_691_p4;

assign zext_ln251_18_fu_716_p1 = y_V_18_fu_706_p4;

assign zext_ln251_19_fu_731_p1 = y_V_19_fu_721_p4;

assign zext_ln251_1_fu_775_p1 = y_V_1_reg_1329;

assign zext_ln251_20_fu_746_p1 = y_V_20_fu_736_p4;

assign zext_ln251_21_fu_827_p1 = y_V_21_reg_1429;

assign zext_ln251_22_fu_831_p1 = y_V_22_reg_1434;

assign zext_ln251_2_fu_779_p1 = y_V_2_reg_1334;

assign zext_ln251_3_fu_783_p1 = y_V_3_reg_1339;

assign zext_ln251_4_fu_556_p1 = y_V_4_fu_546_p4;

assign zext_ln251_5_fu_571_p1 = y_V_5_fu_561_p4;

assign zext_ln251_6_fu_787_p1 = y_V_6_reg_1354;

assign zext_ln251_7_fu_791_p1 = y_V_7_reg_1359;

assign zext_ln251_8_fu_795_p1 = y_V_8_reg_1364;

assign zext_ln251_9_fu_799_p1 = y_V_9_reg_1369;

assign zext_ln251_fu_771_p1 = y_V_reg_1324;

assign zext_ln259_fu_970_p1 = y_V_23_fu_960_p4;

endmodule //softmax_latency_ap_fixed_ap_fixed_softmax_config10_s
